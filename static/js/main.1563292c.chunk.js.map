{"version":3,"sources":["serviceWorker.js","components/Navigation/index.js","constants/routes.js","components/LogoBq.js","components/NavBar.js","components/Landing/index.js","components/SelectUser/index.js","components/Order/index.js","data/normalmenu.js","data/breakfastmenu.js","components/ShowMenu.js","components/Button.js","components/Comanda.js","components/Menu/index.js","components/AddProductToMenu.js","components/ShowProducts.js","components/Admin/index.js","components/ShowOrders.js","components/Kitchen/index.js","components/Deliver/index.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","Navigation","react_default","a","createElement","className","react_router_dom","to","LogoBq","src","Component","NavBar","Navbar_default","collapseOnSelect","fixed","expand","bg","Brand","as","Link","Toggle","aria-controls","Collapse","id","Nav_default","Landing","Container_default","Row_default","Col_default","components_NavBar","sm","components_LogoBq","SelectUser","Order","props","NormalMenu","product","price","img","options","extras","BreakfastMenu","ShowMenu","_this","this","style","backgroundImage","Button_default","variant","size","onClick","console","log","addItem","data-price","Comanda","clientname","isInvalid","Table_default","responsive","striped","bordered","hover","order","map","line","index","type","value","onDelete","total","name","onChange","placeholder","ref","disabled","e","onSubmit","Menu","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","newOrderElement","setState","concat","toConsumableArray","state","delete","filter","orderElement","event","sendOrder","status","items","fetchPost","target","defineProperty","url","data","fetch","method","body","JSON","stringify","headers","Content-Type","then","res","json","response","catch","error","breakfast","normal","arrTry","_this2","orderAsJson","_this3","sendorder","Tabs_default","defaultActiveKey","Tab_default","eventKey","title","food","components_ShowMenu","key","components_Comanda","AddProductToMenu","_this$props","item","category","ShowProducts","menu","products","menuData","Admin","fetchApi","meth","_this$state","addProductToDB","Number","preventDefault","components_ShowProducts","components_AddProductToMenu","ShowOrders","Card_default","width","Body","Title","Subtitle","ListGroup_default","Item","onChangeStatus","Kitchen","orderId","newStatus","changeStatus","orders","kitchenOrders","readyOrders","onKitchen","orderReady","components_ShowOrders","_id","Deliver","toDeliver","delivered","App","basename","components_Navigation","react_router","exact","path","component","LandingPage","SelectUserPage","OrderPage","MenuPage","KitchenPage","AdminPage","DeliverPage","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1563292c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n//import '../../css/style.css';\n\n\nconst Navigation = () => (\n\t<div className=\"App\">\n\t\t<nav>\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to={ROUTES.SELECTUSER}>SelectUser</Link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to={ROUTES.LANDING}>Landing</Link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to={ROUTES.ORDER}>Order</Link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to={ROUTES.MENU}>Menu</Link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to={ROUTES.KITCHEN}>Kitchen</Link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to={ROUTES.ADMIN}>Admin</Link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to={ROUTES.DELIVER}>Deliver</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</nav>\n\t</div>\n);\n\nexport default Navigation;\n\n\n","export const LANDING = '/';\nexport const SELECTUSER = '/selectuser';\nexport const ORDER = '/order';\nexport const MENU = '/menu';\nexport const ADMIN = '/admin';\nexport const KITCHEN = '/kitchen';\nexport const DELIVER = '/deliver';","import React, {Component} from 'react';\n\nclass LogoBq extends Component { \n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<img src='https://i.postimg.cc/QCHGKmRc/1949831-1.jpg'></img>\n\t\t\t</div>\n\n\t\t\t);\n\t}\n};\n\nexport default LogoBq;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\n\nconst NavBar = () => (\n    <Navbar collapseOnSelect fixed=\"top\" expand=\"lg\" bg=\"light\">\n        <Navbar.Brand as={Link} to={ROUTES.LANDING}>Home</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n                <Nav.Link as={Link} to={ROUTES.ORDER}>Orden</Nav.Link>\n                <Nav.Link as={Link} to={ROUTES.KITCHEN}>Cocina</Nav.Link>\n            </Nav>\n        </Navbar.Collapse>\n    </Navbar>\n);\n\nexport default NavBar;\n\n","import React from 'react';\nimport LogoBq from '../LogoBq';\nimport NavigationButton from '../NavigationButton';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport NavBar from '../NavBar';\n\n\nconst Landing = () => (\n\t<Container>\n\t\t<Row>\n\t\t\t<Col>\n\t\t\t\t<NavBar />\n\t\t\t</Col>\n\t\t</Row>\n\t\t<Row>\n\t\t\t<Col sm>\n\t\t\t\t<div className=\"landing-Page\">\n\t\t\t\t<LogoBq />\n\t\t\t\t</div>\t\n\t\t\t</Col>\n\t\t\t<Col sm>\n\t\t\t<div className=\"landing-buttons\">\n\t\t\t\t\t<Link className=\"btn btn-outline-secondary btn-lg lnding-btn\" to={ROUTES.ORDER}>Mesero</Link>\n\t\t\t\t\t<Link className=\"btn btn-outline-secondary btn-lg lnding-btn\" to={ROUTES.KITCHEN}>Cocina</Link>\n\t\t\t\t\t<Link className=\"btn btn-outline-secondary btn-lg lnding-btn\" to={ROUTES.ADMIN}>Administrador</Link>\n\t\t\t\t</div>\n\t\t\t</Col>\n\t\t</Row>\n\t</Container>\n);\n\n\nexport default Landing;\n","import React from 'react';\n\n\n\n\nconst SelectUser = () => (\n\n\t\n <div> Select User </div>\n\t\n\n);\nexport default SelectUser;\n","import React from 'react';\n\nimport NavigationButton from '../NavigationButton';\n\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport NavBar from '../NavBar';\n\n\nconst Order = (props) => {\n\n\treturn (\n\t\t<Container>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<NavBar />\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<div className=\"order-page-content\">\n\t\t\t\t\t\t<div className=\"buttons-order\">\n\t\t\t\t\t\t\t<Link className=\"btn btn-outline-secondary btn-lg\" to={ROUTES.MENU}> Tomar Orden </Link>\n\t\t\t\t\t\t\t<Link className=\"btn btn-outline-secondary btn-lg\" to={ROUTES.DELIVER}>Entregar Orden</Link>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t)\n};\n\nexport default Order;","export const NormalMenu = [\n{\nproduct: \"Hamburguesa Simple\",\nprice: 10,\nimg: 'https://i.postimg.cc/6QBmmMTX/burger-simple.jpg',\noptions: ['Res', 'Pollo', 'Portobello'],\nextras: ['Queso', 'Huevo'],\nid: 5\n},\n{\nproduct: \"Hamburguesa Doble\",\nprice: 15, \nimg: 'https://i.postimg.cc/FHy6pMrp/burger-double.jpg',\noptions: ['Res', 'Pollo', 'Portobello'],\nextras: ['Queso', 'Huevo'],\nid: 6\n},\n{\nproduct: \"Papas fritas\",\nprice: 5, \nimg: 'https://i.postimg.cc/fyVFvkyS/frenchfries.jpg',\noptions: null,\nextras: null,\nid: 7\n},\n{\nproduct: \"Aros de Cebolla\", \nprice: 5, \nimg: 'https://i.postimg.cc/XNPtYK1f/onion-rings.jpg',\noptions: null,\nextras: null,\nid: 8\n},\n{\nproduct: \"Agua 500ml\",\nprice: 5, \nimg: 'https://i.postimg.cc/DzctvtR0/water.jpg',\noptions: null,\nextras: null,\nid: 9\n},\n{\nproduct: \"Agua 750ml\",\nprice: 7, \nimg: \"https://i.postimg.cc/DzctvtR0/water.jpg\",\noptions: null,\nextras: null,\nid: 10\n},\n{\nproduct: \"Refresco 500ml\",\nprice: 7, \nimg: \"https://i.postimg.cc/0yR3pksr/150617-sodaglass-stock.jpg\",\noptions: null,\nextras: null,\nid: 11\n},\n{product: \"Refresco 750ml\",\nprice: 10, \nimg: \"https://i.postimg.cc/0yR3pksr/150617-sodaglass-stock.jpg\",\noptions: null,\nextras: null,\nid: 12}\n];","export const BreakfastMenu = [\n{\nproduct: \"Café de olla\",\nprice: 5,\nimg: 'https://i.postimg.cc/0Q2hbVqf/cafe-de-olla.jpg',\noptions: null,\nextras: null,\nid: 1\n},\n{\nproduct: \"Capuccino latte\",\nprice: 7, \nimg: 'https://i.postimg.cc/j5gmNyxr/capuchino.jpg', \noptions: null,\nextras: null,\nid: 2 \n},\n{\nproduct: \"Jugos de fruta\",\nprice: 7, img: 'https://i.postimg.cc/BbRz7sPY/jugo.jpg', \noptions: null,\nextras: null,\nid: 3 \n},\n{\nproduct: \"Sandwich de calabacita\", \nprice: 10, \nimg: 'https://i.postimg.cc/8Pr9JFxq/portada-sandwich-verde.jpg',\noptions: null,\nextras: null,\nid: 4 \n}\n];\n","import React, {Component} from 'react';\nimport Button from 'react-bootstrap/Button';\n\nclass ShowMenu extends Component {\n\nrender(){\n\n\t\treturn (\n\t\t\t<div className=\"cardFood-container\">\n\t\t\t\t<a>\n\t\t\t\t\t<div className=\"food-image\" style={{backgroundImage: \"url(\" + this.props.img + \")\"}}></div>\n\t\t\t\t</a>\n\t\t\t\t<Button variant=\"secondary\" size=\"lg\"\n\t\t\t\tonClick={ () => { console.log('click', this.props);this.props.addItem(this.props.price, this.props.product) } }\n\t\t\t\tdata-price={this.props.price}\n\t\t\t\t>{this.props.product}</Button>\n\t\t\t\t<h2>${this.props.price}</h2>\n\t\t\t</div>\n\t\t\t\n\t\t);\n\t}\n\n}\n\nexport default ShowMenu;","import React, {Component} from 'react';\nimport Button from 'react-bootstrap/Button';\n\n\nclass Buttons extends Component {\n\n\trender() {\n\n\t  return (\n\t    <Button variant=\"light\" size=\"lg\"\n\t      onClick={this.props.action}\n\t    >\n\t      {this.props.name}\n\t    </Button>\n\t  );\n\n\t}\n};\n\nexport default Buttons;\n","import React, {Component} from 'react';\nimport Buttons from './Button';\nimport Table from 'react-bootstrap/Table';\n\n\nclass Comanda extends Component {\n\n\n\trender(){\n\t\tconst {\n\t\t\tclientname\n\t\t} = this.props.clientname;\n\n\t\tconst isInvalid = clientname === '';\n\n\t\treturn(\n\t\t\t<div className=\"comanda-container col-md-6\">\n\t\t\t<Table responsive striped bordered hover>\n\t\t\t  <thead>\n\t\t\t    <tr>\n\t\t\t      <th>Comida</th>\n\t\t\t      <th>Precio</th>\n\t\t\t      <th>boton</th>\n\t\t\t    </tr>\n\t\t\t  </thead>\n\t\t\t  <tbody>\n\t\t\t  { \n\t\t\t  \tthis.props.order.map((line, index) => (\n\t\t\t\t    <tr>\n\t\t\t\t      <td>{line.product}</td>\n\t\t\t\t      <td>${line.price}</td>\n\t\t\t\t\t\t\t<td><input \n\t\t\t\t\t\t\ttype=\"button\" \n\t\t\t\t\t\t\tvalue=\"Eliminar\" \n\t\t\t\t\t\t\tonClick={() => {this.props.onDelete(line.price, line.product)}}/>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t    </tr>\n\n\t\t\t  \t))}\n\t\t\t  \t<tr>\n\t\t\t  \t\t<td>Total</td>\n\t\t\t  \t\t<td>${this.props.total}</td>\n\t\t\t  \t</tr>\n\t\t\t  </tbody>\n\t\t\t</Table>\n\t\t\t<input\n\t\t\t\t\tname=\"clientname\"\n\t\t\t\t\tvalue={clientname}\n\t\t\t\t\tonChange={this.props.onChange}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Inserte nombre del cliente\"\n\t\t\t\t\tref=\"client_name\"\n\t\t\t\t/>\n\t\t\t\t<button disabled={isInvalid} onClick={(e)=>{this.props.onSubmit()}}>\n\t\t\t\t\tSend Order\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t)\n\t}\n}\n\nexport default Comanda;","//import React from 'react';\nimport React, {Component} from 'react';\n//data\nimport {NormalMenu} from '../../data/normalmenu';\nimport {BreakfastMenu} from '../../data/breakfastmenu';\n//bootstrap style imports\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\n//components\nimport ShowMenu from '../ShowMenu';\nimport Comanda from '../Comanda';\nimport NavBar from '../NavBar';\n\nclass Menu extends Component { \n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tbreakfast: null,\n\t\t\tnormal: null,\n\t\t\t//to save the order\n\t\t\torder: [],\n\t\t\tarrTry: [],\n\t\t\t//to save the client name\n\t\t\tclientname: '',\n\t\t\ttotal: 0\n\t\t}\n\t}\n\n\t//update order state to send to the comanda component\n\taddItem = (price, product) => {\n\t\tconst newOrderElement = {\n\t\t\tproduct,\n\t\t\tprice,\n\t\t}\n\t\tthis.setState({\n\t\t\torder: [...this.state.order, newOrderElement],\n\t\t\ttotal: this.state.total + price,\n\t\t})\n\t}\n\n\tdelete = (price, product) => {\n\t\tthis.setState({\n\t\t\torder: this.state.order.filter( (orderElement) => { return orderElement.product !== product }),\n\t\t\ttotal: this.state.total - price,\n\t\t})\n\t}\n\t//comanda order\n\tonSubmit = event => {\n\t\tconst { clientname } = this.state;\n\t\tconst url = \"https://backbq.herokuapp.com/order\";\n\n\t\tconst sendOrder = {\n\t\t\t\"clientname\": this.state.clientname,\n\t\t\t\"status\": \"pending\",\n\t\t\t\"items\": this.state.order\n\t\t};\n\n\t\t\tthis.fetchPost(url, sendOrder);\n\t\t\tconsole.log(sendOrder);\n\n\t}\n\n\tonChange = event => {\n\t\tconsole.log(event.target.name, event.target.value);\t\n\t\tthis.setState({ [event.target.name]: event.target.value });\n\t}\n\n\tfetchPost = (url, data) => {\n\t\tfetch(url, {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(data),\n\t\t\theaders:{\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}\n\t\t}).then(res => res.json())\n\t\t.then(response => console.log('aquí la respuesta', JSON.stringify(response)))\n\t\t.catch(error => console.log('Error ', error)); \n\t}\n\n\n\t\n\tcomponentDidMount(){\n\n        fetch(\"https://backbq.herokuapp.com/order\")\n            .then(res => res.json())\n\t\t\t\t\t\t.then((orderAsJson)=>{this.setState({arrTry : orderAsJson}, console.log(orderAsJson))});\t\t\n\t}\n\t\n\n\t\trender() {\n\t\t\tconsole.log(this.state.sendorder)\n\n\t\treturn (\n\t\t\t<container>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t<NavBar />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Tabs defaultActiveKey=\"normalMenu\" id=\"uncontrolled-tab-example\">\n\t\t\t\t  <Tab eventKey=\"breakfastMenu\" title=\"Desayuno\">\n\t\t\t\t  <div className= \"row\">\n\t\t\t\t\t  \t<div className=\"card-container col-md-6\">\n\t\t\t\t\t\t\t {BreakfastMenu.map((food, index) => (\n\t\t\t\t\t\t\t<ShowMenu\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\timg={food.img} \n\t\t\t\t\t\t\t\tproduct={food.product} \n\t\t\t\t\t\t\t\tprice={food.price} \n\t\t\t\t\t\t\t\taddItem={this.addItem}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)) } \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{this.state.order ? <Comanda \n\t\t\t\t\t\t\torder={this.state.order} \n\t\t\t\t\t\t\ttotal={this.state.total}\n\t\t\t\t\t\t\tclientname={this.state.clientname} \n\t\t\t\t\t\t\tonDelete={this.delete}\n\t\t\t\t\t\t\tonSubmit={this.onSubmit}\n\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t/> : <Comanda /> }\n\t\t\t\t\t\t\n\t\t\t\t  </div>\n\n\t\t\t\t  </Tab>\n\t\t\t\t  <Tab eventKey=\"normalMenu\" title=\"Normal\">\n\t\t\t\t   <div className= \"row\">\n\t\t\t\t\t  \t<div className=\"card-container col-md-6\">\n\t\t\t\t\t\t\t {NormalMenu.map((food, index) => (\n\t\t\t\t\t\t\t\t<ShowMenu\n\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\timg={food.img} \n\t\t\t\t\t\t\t\t\tproduct={food.product} \n\t\t\t\t\t\t\t\t\tprice={food.price}\n\t\t\t\t\t\t\t\t\taddItem={this.addItem} \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)) } \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{this.state.order ? <Comanda \n\t\t\t\t\t\torder={this.state.order} \n\t\t\t\t\t\ttotal={this.state.total} \n\t\t\t\t\t\tclientname={this.state.clientname}\n\t\t\t\t\t\tonDelete={this.delete}\n\t\t\t\t\t\tonSubmit={this.onSubmit}\n\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t/> : <Comanda />}\n\t\t\t\t  </div>\n\t\t\t\t  </Tab>\n\t\t\t\t</Tabs>\t\n\t\t\t</container>\n\t\t)\n\t}\n};\n\n\nexport default Menu;\n","import React, {Component} from 'react';\n\nconst INITIAL_STATE = {\n\titem: '',\n\tprice: '',\n\tcategory: '',\n\timg: '',\n\terror: null,\n\t};\n\n\nclass AddProductToMenu extends Component {\n \n    render(){\n        const {\n            item, \n            price, \n            category,\n            img\n        } = this.props;\n\n        const isInvalid = \n        item === '' || \n        price <= 0 ||\n        category === '' ||\n        img === '';\n\n        return (\n            <form onSubmit={this.props.onSubmit}>\n                <input\n                    name=\"item\"\n                    value={item}\n                    onChange={this.props.onChange}\n                    type=\"text\"\n                    placeholder=\"Nombre del producto\"\n                />\n                <input\n                    name=\"price\"\n                    value={price}\n                    onChange={this.props.onChange}\n                    type=\"text\"\n                    placeholder=\"Ingresa el precio\"\n                />\n                <input \n                    name=\"category\"\n                    value={category}\n                    onChange={this.props.onChange}\n                    type=\"text\"\n                    placeholder=\"Ingresa categoría\"\n                />\n                <input \n                    name=\"img\"\n                    value={img}\n                    onChange={this.props.onChange}\n                    type=\"text\"\n                    placeholder=\"Ingresa url de imagen\"\n                />\n                <button disabled={isInvalid} type=\"submit\">\n                    Agregar\n                </button>\n            </form>\n\n        );\n    }\n\n}\n\nexport default AddProductToMenu;","import React, {Component} from 'react';\nimport Table from 'react-bootstrap/Table';\n\nclass ShowProducts extends Component {\n    render(){\n     \n        if(this.props.menu.products){\n           var menuData = [...this.props.menu.products];\n        }\n     \n        return(\n            <Table responsive striped bordered hover>\n            <thead>\n                <tr>\n                <th>#id</th>\n                <th>item</th>\n                <th>Price</th>\n                <th>Category</th>\n                </tr>\n            </thead>\n            <tbody>\n                { menuData ? \n\n                    menuData.map((product, index) => (\n                        <tr>\n                        <td>{index}</td>\n                        <td>{product.product}</td>\n                        <td>{product.price}</td>\n                        <td>{product.category}</td>\n                        </tr>\n                    )) : console.log('waiting for response')\n                    \n                }\n            </tbody>\n            </Table>\n\n        );\n    }\n\n}\n\nexport default ShowProducts;","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport AddProductToMenu from '../AddProductToMenu';\nimport ShowProducts from '../ShowProducts';\nimport NavBar from '../NavBar';\n\nconst INITIAL_STATE = {\n    item: '',\n    price: '',\n    category: '',\n    img: '',\n    menu: [],\n    error: null,\n};\n\nclass Admin extends Component {\n    constructor() {\n        super();\n        this.state = {\n            menu: [],\n        }\n    }\n\n\n    fetchApi = (url, data, meth) => {\n        fetch(url, {\n            method: meth,\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => res.json())\n            .then(response => console.log('aquí la respuesta', JSON.stringify(response)))\n            .catch(error => console.log('Error ', error));\n    }\n\n    onSubmit = event => {\n        const { item, category, img } = this.state;\n        const toNumber = Number(this.state.price);\n        const url = 'https://backbq.herokuapp.com/product';\n\n        const addProductToDB = {\n            \"category\": category,\n            \"img\": img,\n            \"price\": toNumber,\n            \"product\": item,\n        };\n\n        this.fetchApi(url, addProductToDB, 'POST');\n        console.log(addProductToDB);\n\n        event.preventDefault();\n    }\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n\n\n    componentDidMount() {\n\n        fetch(\"https://backbq.herokuapp.com/product\")\n            .then(res => res.json())\n            .then((orderAsJson) => { this.setState({ menu: orderAsJson }, console.log(orderAsJson)) });\n    }\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <NavBar />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        {this.state.menu ? <ShowProducts\n                            menu={this.state.menu}\n                        /> : <ShowProducts />}\n                    </Col>\n                    <Col>\n                        <div className=\"addproduct-form\">\n                            <h3>Add Products</h3>\n                            <AddProductToMenu\n                                onChange={this.onChange}\n                                onSubmit={this.onSubmit}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n\n        );\n    }\n}\n\n\n\nexport default Admin;","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\n\nclass ShowOrders extends Component {\n    constructor() {\n        super();\n        this.state = {\n           \n        }\n    }\n\n    render() {\n\n        return (\n            <Card style={{ width: '18rem' }}>\n                <Card.Body>\n                    <Card.Title>Orden #{this.props.id}</Card.Title>\n                    <Card.Subtitle className=\"mb-2 text-muted\">{this.props.name}</Card.Subtitle>\n                    <ListGroup>\n                        {this.props.items.map((item, index)=>(          \n                            <ListGroup.Item variant=\"light\">{item.product}</ListGroup.Item>\n                            ))\n                        }\n                        <ListGroup.Item variant=\"dark\">{this.props.status}</ListGroup.Item>\n                    </ListGroup>\n                    <Button \n                    variant=\"primary\" \n                    id={this.props.id}\n                    value={this.props.status}\n                    onClick={(e)=>{this.props.onChangeStatus(this.props.id, this.props.status)}}>\n                        Change Status\n                        </Button>\n                </Card.Body>\n            </Card>\n\n        )\n    }\n}\n\n\nexport default ShowOrders;\n\n","import React, { Component } from 'react';\nimport NavBar from '../NavBar';\nimport ShowOrders from '../ShowOrders';\n//bootstrap style imports\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\n\n\n\nclass Kitchen extends Component {\n    constructor() {\n        super();\n        this.state = {\n            orders: [],\n            kitchenOrders: [],\n            readyOrders: []\n\n        }\n    }\n\n    fetchApi = (url, data, meth) => {\n        fetch(url, {\n            method: meth,\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => res.json())\n            .then(response => console.log('mongoDB responde', JSON.stringify(response)))\n            .catch(error => console.log('Error ', error));\n    }\n\n    onChangeStatus = (orderId, status) => {\n        const url = `https://backbq.herokuapp.com/order/${orderId}`\n\n        let newStatus;\n        if (status === 'pending') {\n            newStatus = \"preparing\";\n        }\n        else if (status === 'preparing') {\n            newStatus = \"ready\";\n        }\n\n        const changeStatus = {\n            \"status\": newStatus\n        }\n\n        this.fetchApi(url, changeStatus, 'PUT')\n    }\n\n\n\n    componentDidMount() {\n        const url = \"https://backbq.herokuapp.com/order\";\n\n        fetch(url)\n            .then(res => res.json())\n            .then((orderAsJson) => { this.setState({ orders: orderAsJson }, console.log('aquí las ordenes', orderAsJson)) })\n    }\n\n    render() {\n        let onKitchen;\n        let orderReady;\n        if (this.state.orders.orders) {\n            onKitchen = this.state.orders.orders.filter((order) => { return ((order.status === 'pending') || (order.status === 'preparing')) });\n            orderReady = this.state.orders.orders.filter((order) => { return (order.status === 'ready') });\n        };\n\n        return (\n            <container>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <NavBar />\n                    </div>\n\n                </div>\n                <div className=\"kitchen-orders\">\n                    <h1>aquí Kitchen / show orders</h1>\n\n                    <div>\n                        <Tabs defaultActiveKey=\"Orders\" id=\"uncontrolled-tab-example\">\n                            <Tab eventKey=\"Orders\" title=\"Ordenes\">\n                                <div className=\"row\">\n                                    <div className=\"card-container\">\n                                        {this.state.orders.orders ? onKitchen.map((order, index) => (\n                                            <ShowOrders\n                                                id={order._id}\n                                                name={order.clientname}\n                                                items={order.items}\n                                                status={order.status}\n                                                onChangeStatus={this.onChangeStatus}\n                                            />\n                                        )) : console.log('waiting for orders response')}\n\n                                    </div>\n\n                                </div>\n\n                            </Tab>\n                            <Tab eventKey=\"CompletedOrders\" title=\"Completadas\">\n                                <div className=\"row\">\n                                    <div className=\"card-container\">\n                                        {this.state.orders.orders ? orderReady.map((order, index) => (\n                                            <ShowOrders\n                                                id={order._id}\n                                                name={order.clientname}\n                                                items={order.items}\n                                                status={order.status}\n                                                onChangeStatus={this.onChangeStatus}\n                                            />\n                                        )) : console.log('waiting for orders response')}\n\n                                    </div>\n                                </div>\n                            </Tab>\n                            <Tab eventKey=\"allOrders\" title=\"Todas las Ordenes\">\n                                <div className=\"row\">\n                                    <div className=\"card-container\">\n                                        {\n                                            this.state.orders.orders ? this.state.orders.orders.map((order, index) => (\n                                                <ShowOrders\n                                                    id={order._id}\n                                                    name={order.clientname}\n                                                    items={order.items}\n                                                    status={order.status}\n                                                    onChangeStatus={this.onChangeStatus}\n                                                />\n                                            ))\n                                                : console.log('waiting for orders response')}\n\n                                    </div>\n\n                                </div>\n\n                            </Tab>\n                        </Tabs>\n                    </div>\n                </div>\n            </container>\n        );\n    }\n\n}\n\nexport default Kitchen;","import React, { Component } from 'react';\nimport NavBar from '../NavBar';\nimport ShowOrders from '../ShowOrders';\n//bootstrap style imports\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\n\n\nclass Deliver extends Component {\n    constructor() {\n        super();\n        this.state = {\n            orders: [],\n            toDeliver: [],\n            delivered: []\n        }\n    }\n\n    fetchApi = (url, data, meth) => {\n        fetch(url, {\n\n            method: meth,\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => res.json())\n            .then(response => console.log('mongoDB responde', JSON.stringify(response)))\n            .catch(error => console.log('Error ', error));\n    }\n\n    componentDidMount() {\n        const url = \"https://backbq.herokuapp.com/order\";\n\n        fetch(url)\n            .then(res => res.json())\n            .then((orderAsJson) => { this.setState({ orders: orderAsJson }, console.log('mongoDB orders', orderAsJson)) })\n    }\n\n\n    render(){ /*\n        quiza deberia llenar estas variables desde el componente padre\n        const {\n        toDeliver, \n        delivered\n    } = this.state*/\n    let toDeliver;\n    let delivered;\n       \n        if(this.state.orders.orders){\n            toDeliver = this.state.orders.orders.filter((order)=>{return (order.status === 'ready')});\n            console.log(toDeliver);\n            delivered = this.state.orders.orders.filter((order)=>{return (order.status === 'delivered')});\n        }\n        return(\n        <container>\n            <div className=\"row\">\n                <div className=\"row\">\n                    <NavBar />\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col\">\n                    <h2>Entregas</h2>\n                    <Tabs defaultActiveKey=\"Orders\" id=\"uncontrolled-tab-example\">\n                            <Tab eventKey=\"Orders\" title=\"Para entregar\">\n                                <div className=\"row\">\n                                    <div className=\"card-container\">\n                                        {this.state.orders.orders ? toDeliver.map((order, index) => (\n                                            <ShowOrders\n                                                id={order._id}\n                                                name={order.clientname}\n                                                items={order.items}\n                                                status={order.status}\n                                                onChangeStatus={this.onChangeStatus}\n                                            />\n                                        )) : console.log('waiting for orders response')/*implementar animacion de espera*/}\n                                    </div>\n                                </div>\n                            </Tab>\n                            <Tab eventKey=\"DeliveredOrders\" title=\"Entregadas\">\n                                <div className=\"row\">\n                                    <div className=\"card-container\">\n                                        {this.state.orders.orders ? delivered.map((order, index) => (\n                                            <ShowOrders\n                                                id={order._id}\n                                                name={order.clientname}\n                                                items={order.items}\n                                                status={order.status}\n                                                onChangeStatus={this.onChangeStatus}\n                                            />\n                                        )) : console.log('waiting for orders response')}\n\n                                    </div>\n                                </div>\n                            </Tab>\n                        </Tabs>\n                </div>\n            </div>\n        </container>\n        )\n    }\n}\n\nexport default Deliver;","import React from 'react';\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\n\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SelectUserPage from '../SelectUser';\nimport OrderPage from '../Order';\nimport MenuPage from '../Menu';\nimport AdminPage from '../Admin';\nimport KitchenPage from '../Kitchen';\nimport DeliverPage from '../Deliver';\n\nimport * as ROUTES from '../../constants/routes';\n\nconst App = () => (\n\t<HashRouter basename=\"GDL002-burger-queen/\">\t\n\t\t<Navigation />\n\n\t<Switch>\n\t\t<Route exact path={ROUTES.LANDING} component={LandingPage} />\n\t\t<Route path={ROUTES.SELECTUSER} component={SelectUserPage} />\n\t\t<Route path={ROUTES.ORDER} component={OrderPage} />\n\t\t<Route path={ROUTES.MENU} component={MenuPage} />\n\t\t<Route path={ROUTES.KITCHEN} component={KitchenPage} />\n\t\t<Route path={ROUTES.ADMIN} component={AdminPage} />\n\t\t<Route path={ROUTES.DELIVER} component={DeliverPage} />\n\t</Switch>\n\t</HashRouter>\n\n\t);\n\nexport default App; \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/style.css';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom'\n\nimport App from './components/App';\n//import Firebase, { FirebaseContext } from './components/Firebase';\n\n/*\n<FirebaseContext.Provider value={new Firebase()}>\n\t</FirebaseContext.Provider>*/\n\nReactDOM.render(\n\t\t<App /> \n,\tdocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}